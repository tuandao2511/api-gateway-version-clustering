{
  "_from": "node-env-run",
  "_id": "node-env-run@3.0.2",
  "_inBundle": false,
  "_integrity": "sha512-Gk80wKaeigC3OuAsxi52NRuQm7SkHeeqOaTbC7kYe/gqcY0F4+PwvsiE1QYD0rgNaQgs6p7Mhq/V+fb/yD44FA==",
  "_location": "/node-env-run",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "node-env-run",
    "fetchSpec": "latest",
    "name": "node-env-run",
    "raw": "node-env-run",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#DEV:/",
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/node-env-run/-/node-env-run-3.0.2.tgz",
  "_shasum": "7716a1bf56af3ccdda8f846457af3e9d6f0b2c6e",
  "_shrinkwrap": null,
  "_spec": "node-env-run",
  "_where": "/home/tuandao/node/one-to-one-call-api-gateway/api-gate-way-server",
  "author": {
    "email": "dominik.kundel@gmail.com",
    "name": "Dominik Kundel"
  },
  "bin": {
    "node-env-run": "./dist/bin/node-env-run.js",
    "nodenv": "./dist/bin/node-env-run.js"
  },
  "bugs": {
    "url": "https://github.com/dkundel/node-env-run/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "@types/common-tags": "^1.4.0",
    "@types/debug": "^0.0.29",
    "@types/dotenv": "^4.0.0",
    "@types/node": "^7.0.18",
    "@types/yargs": "^11.0.0",
    "common-tags": "^1.7.2",
    "debug": "^2.6.7",
    "dotenv": "^4.0.0",
    "pkginfo": "^0.4.1",
    "yargs": "^11.0.0"
  },
  "deprecated": false,
  "description": "Wrapper executable to load env variables from .env and run Node",
  "devDependencies": {
    "@types/jest": "^19.2.3",
    "all-contributors-cli": "^4.11.1",
    "eslint": "^4.19.1",
    "eslint-config-airbnb-base": "^12.1.0",
    "eslint-config-prettier": "^2.9.0",
    "eslint-config-typescript": "^1.0.2",
    "eslint-plugin-import": "^2.9.0",
    "eslint-plugin-jest": "^21.15.0",
    "eslint-plugin-prettier": "^2.6.0",
    "eslint-plugin-typescript": "^0.10.0",
    "jest": "^20.0.4",
    "npm-run-all": "^4.0.2",
    "prettier": "^1.11.1",
    "ts-jest": "^20.0.3",
    "typescript": "^2.7.2",
    "typescript-eslint-parser": "^14.0.0"
  },
  "homepage": "https://github.com/dkundel/node-env-run#readme",
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts",
      "tsx"
    ],
    "testPathIgnorePatterns": [
      "<rootDir>/dist/",
      "<rootDir>/node_modules/"
    ],
    "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx)$",
    "transform": {
      "^.+\\.tsx?$": "<rootDir>/node_modules/ts-jest/preprocessor.js"
    }
  },
  "keywords": [
    ".env",
    "config",
    "dotenv",
    "env",
    "environment",
    "settings",
    "variables"
  ],
  "license": "MIT",
  "name": "node-env-run",
  "optionalDependencies": {},
  "readme": "[![npm](https://img.shields.io/npm/v/node-env-run.svg?style=flat-square)](https://npmjs.com/packages/node-env-run) [![npm](https://img.shields.io/npm/dt/node-env-run.svg?style=flat-square)](https://npmjs.com/packages/node-env-run) [![npm](https://img.shields.io/npm/l/node-env-run.svg?style=flat-square)](/LICENSE) [![Build Status](https://travis-ci.org/dkundel/node-env-run.svg?branch=master)](https://travis-ci.org/dkundel/node-env-run)\n[![All Contributors](https://img.shields.io/badge/all_contributors-1-orange.svg?style=flat-square)](#contributors)\n\n<p align=\"center\">\n<img alt=\"node-env-run logo\" title=\"node-env-run\" src=\"https://cdn.rawgit.com/dkundel/node-env-run/01461b3a/assets/node-env-run-logo.png\" height=\"200\">\n</p>\n\n# node-env-run\n\n> Command-line tool to read `.env` files and execute scripts/commands after loading those environment variables\n\n* Uses [`dotenv`](https://npm.im/dotenv) under the hood\n* Easy to configure\n* Flexible command to execute\n* Let's you override existing environment variables\n\n<p align=\"center\"><img alt=\"node-env-run example screenshot. Code below in Documentation section\" src=\"https://cdn.rawgit.com/dkundel/node-env-run/5bc67d1a/assets/node-env-run-screenshot.png\" height=\"350\"/></p>\n\n## Installation\n\n### Install per project:\n\nI recommend installing this module as a `devDependency` for the respective project.\n\n**Install via `yarn`**:\n\n```bash\nyarn add node-env-run --dev\n```\n\n**Install via `npm`**:\n\n```bash\nnpm install node-env-run --save-dev\n```\n\n### Install globally:\n\nYou can alternatively install the module globally if you want to:\n\n```bash\nnpm install node-env-run --global\n```\n\n## Usage\n\nAdd a new scripts entry to your `package.json`. Example:\n\n```json\n{\n  \"scripts\": {\n    \"dev\": \"nodenv .\",\n    \"test\": \"nodenv -E test/.env test/test.js\"\n  }\n}\n```\n\nOr use it with [`npx`](https://medium.com/@maybekatz/introducing-npx-an-npm-package-runner-55f7d4bd282b):\n\n```bash\nnpx node-env-run .\n```\n\n## Documentation\n\nThis module uses under the hood the [`dotenv` module](https://www.npmjs.com/package/dotenv) to parse the `.env` file. For more information about how to structure your `.env` file, please refer to its [documentation](https://www.npmjs.com/package/dotenv#rules).\n\n### Usage examples:\n\n**Start up the `main` file in `package.json` with the enviornment variables from `.env`:**\n\n```bash\nnodenv .\n```\n\n<details>\n\n<summary>More examples: </summary>\n\n**Start Node.js REPL with set environment variables from `.env.repl`**:\n\n```bash\nnodenv -E .env.repl\n```\n\n**Run Python file with overridden environment variables**:\n\n```bash\nnodenv app.py --exec python --force\n```\n\n**Run `server.js` file using [`nodemon`](https://npm.im/nodemon)**:\n\n```bash\nnodenv server.js --exec nodemon\n```\n\n**Pass `--inspect` flag for debugging after `--`:**\n\n```bash\nnodenv someScript -- --inspect\n```\n\n</details>\n\n### Arguments\n\nYou can pass `node-env-run` a variety of arguments. These are the currently supported arguments:\n\n| Flag                 | Type      | Description                                                                                             |\n| -------------------- | --------- | ------------------------------------------------------------------------------------------------------- |\n| `--encoding`         | `string`  | Lets you specify the encoding of the `.env` file. Defaults to `utf8` encoding.                          |\n| `--env` or <br>`-E`  | `string`  | Specifies the path to the `.env` file that should be read                                               |\n| `--exec` or <br>`-e` | `string`  | This lets you specify a command other than `node` to execute the script with. More in the next section. |\n| `--force` or `-f`    | `boolean` | Flag to temporarily override existing environment variables with the ones in the `.env` file            |\n| `--help`             | `boolean` | Displays the usage/help instructions                                                                    |\n| `--verbose`          | `boolean` | Flag to enable more verbose logging                                                                     |\n| `--version`          | `boolean` | Displays the current version of the package                                                             |\n\n### Using `node-env-run` with other executables\n\nYou can use `node-env-run` with other executables. This is particularly useful if you try to combine it with things like [`babel-node`](https://www.npmjs.com/package/@babel/node) or [`ts-node`](https://npm.im/ts-node):\n\n```bash\nnodenv index.ts --exec \"ts-node\"\n```\n\nHowever, you can also use it with completely unrelated executables such as python:\n\n```bash\nnodenv app.py --exec python\n```\n\n## Contributors\n\n<!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section -->\n\n<!-- prettier-ignore -->\n| [<img src=\"https://avatars3.githubusercontent.com/u/1505101?v=4\" width=\"100px;\"/><br /><sub><b>Dominik Kundel</b></sub>](https://moin.world)<br />[ðŸ’»](https://github.com/dkundel/node-env-run/commits?author=dkundel \"Code\") |\n| :---: |\n\n<!-- ALL-CONTRIBUTORS-LIST:END -->\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/dkundel/node-env-run.git"
  },
  "scripts": {
    "build": "npm run tsc",
    "contrib:add": "all-contributors add",
    "contrib:generate": "all-contributors generate",
    "lint": "eslint \"!(node_modules)/**/*.ts\"",
    "prepublish": "npm run tsc",
    "pretest": "npm run lint",
    "test": "jest",
    "tsc": "tsc"
  },
  "types": "./dist/bin/node-env-run.d.ts",
  "version": "3.0.2"
}
